:py:mod:`bs4.tests.test_tree`
=============================

.. py:module:: bs4.tests.test_tree

.. autoapi-nested-parse::

   Tests for Beautiful Soup's tree traversal methods.

   The tree traversal methods are the main advantage of using Beautiful
   Soup over just using a parser.

   Different parsers will build different Beautiful Soup trees given the
   same markup, but all Beautiful Soup trees can be traversed with the
   methods tested here.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   bs4.tests.test_tree.TestFind
   bs4.tests.test_tree.TestFindAll
   bs4.tests.test_tree.TestFindAllBasicNamespaces
   bs4.tests.test_tree.TestFindAllByName
   bs4.tests.test_tree.TestFindAllByAttribute
   bs4.tests.test_tree.TestSmooth
   bs4.tests.test_tree.TestIndex
   bs4.tests.test_tree.TestParentOperations
   bs4.tests.test_tree.ProximityTest
   bs4.tests.test_tree.TestNextOperations
   bs4.tests.test_tree.TestPreviousOperations
   bs4.tests.test_tree.SiblingTest
   bs4.tests.test_tree.TestNextSibling
   bs4.tests.test_tree.TestPreviousSibling
   bs4.tests.test_tree.TestTreeModification
   bs4.tests.test_tree.TestDeprecatedArguments




.. py:class:: TestFind


   Bases: :py:obj:`bs4.tests.SoupTest`

   Basic tests of the find() method.

   find() just calls find_all() with limit=1, so it's not tested all
   that thouroughly here.

   .. py:method:: test_find_tag()


   .. py:method:: test_unicode_text_find()


   .. py:method:: test_unicode_attribute_find()


   .. py:method:: test_find_everything()

      Test an optimization that finds all tags.


   .. py:method:: test_find_everything_with_name()

      Test an optimization that finds all tags with a given name.



.. py:class:: TestFindAll


   Bases: :py:obj:`bs4.tests.SoupTest`

   Basic tests of the find_all() method.

   .. py:method:: test_find_all_text_nodes()

      You can search the tree for text nodes.


   .. py:method:: test_find_all_limit()

      You can limit the number of items returned by find_all.


   .. py:method:: test_calling_a_tag_is_calling_findall()


   .. py:method:: test_find_all_with_self_referential_data_structure_does_not_cause_infinite_recursion()


   .. py:method:: test_find_all_resultset()

      All find_all calls return a ResultSet



.. py:class:: TestFindAllBasicNamespaces


   Bases: :py:obj:`bs4.tests.SoupTest`

   .. py:method:: test_find_by_namespaced_name()



.. py:class:: TestFindAllByName


   Bases: :py:obj:`bs4.tests.SoupTest`

   Test ways of finding tags by tag name.

   .. py:method:: setup_method()


   .. py:method:: test_find_all_by_tag_name()


   .. py:method:: test_find_all_by_name_and_text()


   .. py:method:: test_find_all_on_non_root_element()


   .. py:method:: test_calling_element_invokes_find_all()


   .. py:method:: test_find_all_by_tag_strainer()


   .. py:method:: test_find_all_by_tag_names()


   .. py:method:: test_find_all_by_tag_dict()


   .. py:method:: test_find_all_by_tag_re()


   .. py:method:: test_find_all_with_tags_matching_method()


   .. py:method:: test_find_with_multi_valued_attribute()



.. py:class:: TestFindAllByAttribute


   Bases: :py:obj:`bs4.tests.SoupTest`

   .. py:method:: test_find_all_by_attribute_name()


   .. py:method:: test_find_all_by_utf8_attribute_value()


   .. py:method:: test_find_all_by_attribute_dict()


   .. py:method:: test_find_all_by_class()


   .. py:method:: test_find_by_class_when_multiple_classes_present()


   .. py:method:: test_find_all_with_non_dictionary_for_attrs_finds_by_class()


   .. py:method:: test_find_all_with_string_for_attrs_finds_multiple_classes()


   .. py:method:: test_find_all_by_attribute_soupstrainer()


   .. py:method:: test_find_all_with_missing_attribute()


   .. py:method:: test_find_all_with_defined_attribute()


   .. py:method:: test_find_all_with_numeric_attribute()


   .. py:method:: test_find_all_with_list_attribute_values()


   .. py:method:: test_find_all_with_regular_expression_attribute_value()


   .. py:method:: test_find_by_name_and_containing_string()


   .. py:method:: test_find_by_name_and_containing_string_when_string_is_buried()


   .. py:method:: test_find_by_attribute_and_containing_string()



.. py:class:: TestSmooth


   Bases: :py:obj:`bs4.tests.SoupTest`

   Test Tag.smooth.

   .. py:method:: test_smooth()



.. py:class:: TestIndex


   Bases: :py:obj:`bs4.tests.SoupTest`

   Test Tag.index

   .. py:method:: test_index()



.. py:class:: TestParentOperations


   Bases: :py:obj:`bs4.tests.SoupTest`

   Test navigation and searching through an element's parents.

   .. py:method:: setup_method()


   .. py:method:: test_parent()


   .. py:method:: test_parent_of_top_tag_is_soup_object()


   .. py:method:: test_soup_object_has_no_parent()


   .. py:method:: test_find_parents()


   .. py:method:: test_find_parent()


   .. py:method:: test_parent_of_text_element()


   .. py:method:: test_text_element_find_parent()


   .. py:method:: test_parent_generator()



.. py:class:: ProximityTest


   Bases: :py:obj:`bs4.tests.SoupTest`

   .. py:method:: setup_method()



.. py:class:: TestNextOperations


   Bases: :py:obj:`ProximityTest`

   .. py:method:: setup_method()


   .. py:method:: test_next()


   .. py:method:: test_next_of_last_item_is_none()


   .. py:method:: test_next_of_root_is_none()


   .. py:method:: test_find_all_next()


   .. py:method:: test_find_next()


   .. py:method:: test_find_next_for_text_element()


   .. py:method:: test_next_generator()



.. py:class:: TestPreviousOperations


   Bases: :py:obj:`ProximityTest`

   .. py:method:: setup_method()


   .. py:method:: test_previous()


   .. py:method:: test_previous_of_first_item_is_none()


   .. py:method:: test_previous_of_root_is_none()


   .. py:method:: test_find_all_previous()


   .. py:method:: test_find_previous()


   .. py:method:: test_find_previous_for_text_element()


   .. py:method:: test_previous_generator()



.. py:class:: SiblingTest


   Bases: :py:obj:`bs4.tests.SoupTest`

   .. py:method:: setup_method()



.. py:class:: TestNextSibling


   Bases: :py:obj:`SiblingTest`

   .. py:method:: setup_method()


   .. py:method:: test_next_sibling_of_root_is_none()


   .. py:method:: test_next_sibling()


   .. py:method:: test_next_sibling_may_not_exist()


   .. py:method:: test_find_next_sibling()


   .. py:method:: test_next_siblings()


   .. py:method:: test_next_sibling_for_text_element()



.. py:class:: TestPreviousSibling


   Bases: :py:obj:`SiblingTest`

   .. py:method:: setup_method()


   .. py:method:: test_previous_sibling_of_root_is_none()


   .. py:method:: test_previous_sibling()


   .. py:method:: test_previous_sibling_may_not_exist()


   .. py:method:: test_find_previous_sibling()


   .. py:method:: test_previous_siblings()


   .. py:method:: test_previous_sibling_for_text_element()



.. py:class:: TestTreeModification


   Bases: :py:obj:`bs4.tests.SoupTest`

   .. py:method:: test_attribute_modification()


   .. py:method:: test_new_tag_creation()


   .. py:method:: test_append_to_contents_moves_tag()


   .. py:method:: test_replace_with_returns_thing_that_was_replaced()


   .. py:method:: test_unwrap_returns_thing_that_was_replaced()


   .. py:method:: test_replace_with_and_unwrap_give_useful_exception_when_tag_has_no_parent()


   .. py:method:: test_replace_tag_with_itself()


   .. py:method:: test_replace_tag_with_its_parent_raises_exception()


   .. py:method:: test_insert_tag_into_itself_raises_exception()


   .. py:method:: test_insert_beautifulsoup_object_inserts_children()

      Inserting one BeautifulSoup object into another actually inserts all
      of its children -- you'll never combine BeautifulSoup objects.


   .. py:method:: test_replace_with_maintains_next_element_throughout()


   .. py:method:: test_replace_final_node()


   .. py:method:: test_consecutive_text_nodes()


   .. py:method:: test_insert_string()


   .. py:method:: test_insert_tag()


   .. py:method:: test_append_child_thats_already_at_the_end()


   .. py:method:: test_extend()


   .. py:method:: test_extend_with_another_tags_contents(get_tags)


   .. py:method:: test_move_tag_to_beginning_of_parent()


   .. py:method:: test_insert_works_on_empty_element_tag()


   .. py:method:: test_insert_before()


   .. py:method:: test_insert_multiple_before()


   .. py:method:: test_insert_after()


   .. py:method:: test_insert_multiple_after()


   .. py:method:: test_insert_after_raises_exception_if_after_has_no_meaning()


   .. py:method:: test_insert_before_raises_notimplementederror_if_before_has_no_meaning()


   .. py:method:: test_replace_with()


   .. py:method:: test_replace_with_errors()


   .. py:method:: test_replace_with_multiple()


   .. py:method:: test_replace_first_child()


   .. py:method:: test_replace_last_child()


   .. py:method:: test_nested_tag_replace_with()


   .. py:method:: test_unwrap()


   .. py:method:: test_wrap()


   .. py:method:: test_wrap_extracts_tag_from_elsewhere()


   .. py:method:: test_wrap_puts_new_contents_at_the_end()


   .. py:method:: test_extract()


   .. py:method:: test_extract_distinguishes_between_identical_strings()


   .. py:method:: test_extract_multiples_of_same_tag()


   .. py:method:: test_extract_works_when_element_is_surrounded_by_identical_strings()


   .. py:method:: test_clear()

      Tag.clear()


   .. py:method:: test_decompose()


   .. py:method:: test_string_set()

      Tag.string = 'string'


   .. py:method:: test_string_set_does_not_affect_original_string()


   .. py:method:: test_set_string_preserves_class_of_string()



.. py:class:: TestDeprecatedArguments


   Bases: :py:obj:`bs4.tests.SoupTest`

   .. py:method:: test_find_type_method_string(method_name)


   .. py:method:: test_soupstrainer_constructor_string()



